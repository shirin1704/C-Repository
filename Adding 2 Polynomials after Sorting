//sorting then adding
#include<stdio.h>
#include<stdlib.h>
struct poly
{
    int coeff;
    int exp;
    struct poly *next;
};
struct poly *poly1_head=NULL, *poly1, *poly2_head, *poly2, *res_head=NULL, *res, *print, *temp, *swap, *head;
void printPoly()
{
    printf("The Polynomial is:\n");
    printf("%dx^%d", print->coeff, print->exp);
    print=print->next;
    while(print!=NULL)
    {
        if(print->coeff<0)
        {
            if(print->exp==0)
            printf(" - %d", 0-(print->coeff));
            else if(print->exp==1)
            printf(" - %dx", 0-(print->coeff));
            else
            printf(" - %dx^%d", 0-(print->coeff), print->exp);
        }
        else
        {
            if(print->exp==0)
            printf(" + %d", print->coeff);
            else if(print->exp==1)
            printf(" + %dx", print->coeff);
            else
            printf(" + %dx^%d", print->coeff, print->exp);
        }
        print=print->next;
    }
    printf("\n");
}
void sortPoly()
{
    while(head!=NULL)
    {
        temp=head->next;
        swap=(struct poly*)malloc(sizeof(struct poly));
        while(temp!=NULL)
        {
            if(head->exp<temp->exp)
            {
                swap->coeff=temp->coeff;
                swap->exp=temp->exp;
                temp->coeff=head->coeff;
                temp->exp=head->exp;
                head->coeff=swap->coeff;
                head->exp=swap->exp;
            }
            temp=temp->next;
        }
        head=head->next;
    }
}
void main()
{
    int coef, ex, choice;
    printf("For Polynomial 1: \n");
    do
    {
        if(poly1_head==NULL)
        {
            poly1_head=(struct poly*)malloc(sizeof(struct poly));
            poly1=poly1_head;
        }
        else
        {
            poly1->next=(struct poly*)malloc(sizeof(struct poly));
            poly1=poly1->next;
        }
        printf("Enter the coefficient: ");
        scanf("%d", &coef);
        poly1->coeff=coef;
        printf("Enter the exponent: ");
        scanf("%d", &ex);
        poly1->exp=ex;
        poly1->next=NULL;
        printf("Do you wish to add another term?\n");
        printf("Press 1 for yes. Else press 0. ");
        scanf("%d", &choice);
    }while(choice==1);
    print=poly1_head;
    printPoly();
    printf("For Polynomial 2: \n");
    do
    {
        if(poly2_head==NULL)
        {
            poly2_head=(struct poly*)malloc(sizeof(struct poly));
            poly2=poly2_head;
        }
        else
        {
            poly2->next=(struct poly*)malloc(sizeof(struct poly));
            poly2=poly2->next;
        }
        printf("Enter the coefficient: ");
        scanf("%d", &coef);
        poly2->coeff=coef;
        printf("Enter the exponent: ");
        scanf("%d", &ex);
        poly2->exp=ex;
        poly2->next=NULL;
        printf("Do you wish to add another term?\n");
        printf("Press 1 for yes. Else press 0. ");
        scanf("%d", &choice);
    }while(choice==1);
    print=poly2_head;
    printPoly();
    poly1=poly1_head;
    printf("After sorting the first,\n");
    head=poly1_head;
    sortPoly();
    print=poly1_head;
    printPoly();
    poly2=poly2_head;
    printf("After sorting the second,\n");
    head=poly2_head;
    sortPoly();
    print=poly2_head;
    printPoly();
    while(poly1!=NULL)
    {
        if(res_head==NULL)
        {
            res_head=(struct poly *)malloc(sizeof(struct poly));
            res=res_head;
        }
        else
        {
            res->next=(struct poly *)malloc(sizeof(struct poly));
            res=res->next;
        }
        if(poly2==NULL)
        {
            res->coeff=poly1->coeff;
            res->exp=poly1->exp;
            poly1=poly1->next;
        }
        else if(poly1->exp==poly2->exp)
        {
            res->coeff=poly1->coeff+poly2->coeff;
            res->exp=poly2->exp;
            poly1=poly1->next;
            poly2=poly2->next;
        }
        else if(poly1->exp<poly2->exp)
        {
            res->coeff=poly2->coeff;
            res->exp=poly2->exp;
            poly2=poly2->next;
        }
        else 
        {
            res->coeff=poly1->coeff;
            res->exp=poly1->exp;
            poly1=poly1->next;
        }
        res->next=NULL;
    }
    if(poly2!=NULL)
    {
        while(poly2!=NULL)
        {
            res->next=(struct poly *)malloc(sizeof(struct poly));
            res=res->next;
            res->coeff=poly2->coeff;
            res->exp=poly2->exp;
            poly2=poly2->next;
        }
    }
    poly1=poly1_head;
    poly2=poly2_head;
    res=res_head;
    printf("Result:\n");
    print=res_head;
    printPoly();
}
