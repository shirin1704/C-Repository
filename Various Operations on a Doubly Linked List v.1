#include<stdio.h>
#include<stdlib.h>
struct node
{
    struct node *prev;
    int data;
    struct node *next;
};
struct node *p=NULL, *q, *temp, *last;
void printList()
{
    q=p;
    printf("The list is:\n");
    while(q!=NULL)
    {
        printf("%d\t", q->data);
        q=q->next;
    }
    q=p;
}
void printRList()
{
    q=last;
    printf("The list in reverse is:\n");
    while(q!=NULL)
    {
        printf("%d\t", q->data);
        q=q->prev;
    }
    q=p;
}
void beginning()
{
    temp->prev=NULL;
    temp->next=p;
    p->prev=temp;
    p=temp;
}
void given_pos()
{
    int pos, counter=1;
    printf("Enter the position you wish to add data to: ");
    scanf("%d", &pos);
    while(q!=NULL)
    {
        if(counter==pos)
        {
            temp->prev=q->prev;
            q->prev->next=temp;
            temp->next=q;
            q->prev=temp;
        }
        q=q->next;
        counter++;
    }
}
void end()
{
    while(q!=NULL)
    {
        if(q==last)
        {
            last->next=temp;
            temp->prev=last;
            temp->next=NULL;
            last=temp;
        }
        q=q->next;
    }
    last=q;
}
void main()
{
    int d, choice;
    do
    {
        if(p==NULL)
        {
            p=(struct node *)malloc(sizeof(struct node));
            p->prev=NULL;
            q=p;
        }
        else
        {
            q->next=(struct node *)malloc(sizeof(struct node));
            q->next->prev=q;
            q=q->next;
        }
        printf("Enter data: ");
        scanf("%d", &d);
        q->data=d;
        q->next=NULL;
        printf("Press 1 to add more data. Else press 0. ");
        scanf("%d", &choice);
        if(choice!=1)
        {
            last=(struct node*)malloc(sizeof(struct node));
            last=q;
        }
    }while(choice==1);
    printList();
    int c;
    do
    {
        printf("\nWhat operation do you wish to carry out?\nPress:\n");
        printf("1. Insert a node at the beginning.\n2. Insert a node at a given position.\n3. Insert a node at the end.\n4. To print the updated list.\n5. To print the list in reverse.\n6. To exit.\n");
        scanf("%d", &c);
        temp=(struct node *)malloc(sizeof(struct node));
        q=p;
        switch(c)
        {
            case 1: printf("Enter the data you wish to insert: ");
                    scanf("%d", &d);
                    temp->data=d;
                    beginning();
                    break;
            case 2: printf("Enter the data you wish to insert: ");
                    scanf("%d", &d);
                    temp->data=d;
                    given_pos();
                    break;
            case 3: printf("Enter the data you wish to insert: ");
                    scanf("%d", &d);
                    temp->data=d;
                    end();
                    break;
            case 4: printList();
                    break;
            case 5: printRList();
                    break;
            case 6: choice=1;
                    break;
            default: printf("Invalid input. Please try again.\n");
        }
        q=p;
    }while(choice==0);
}
